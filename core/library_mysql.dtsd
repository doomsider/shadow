#!/bin/bash
# Shadow .01 Based off of DTSD
# This is the main set of functions for dealing with the Mysql database
lib_mysend() {
# Usage lib_mysend database user password command
	MYSQLCOMMAND="${@:1}"
	#echo "command to mysql $MYSQLCOMMAND"
	mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "$MYSQLCOMMAND"
}
lib_myinsert() {
# This command creates a new row
# Usage lib_myinsert table column value 
	INSERTVALUE="${@:3}"
	#echo "INSERT INTO $1 ($2) VALUES ('$INSERTVALUE')"
	lib_mysend "INSERT INTO $1 ($2) VALUES (\"$INSERTVALUE\");"
}
lib_myupdate() {
# This command replaces a value in a column in a row containing a value
# Current limitation of this command is inserting a value with a space in it
# Usage lib_myupdate [table] [column_alter] [value to insert]  [row to search] [search value]  
# lib_myupdate PLAYERDB IP 192.168.1 NAME Doomsider
    UPDATESEARCHVALUE="${@:5}"
	#echo "INSERT INTO $1 ($2) VALUES ('$INSERTVALUE')"
	lib_mysend "UPDATE $1 SET $2='$3' WHERE $4='$UPDATESEARCHVALUE'"
}
lib_mycreate() {
# This command generates a list of tables and columns described by all related scripts and then
# creates them if they do not eixst
	#echo "Generating database tables and columns"
	#echo "These vars detected"
	CREATEVAR=( $(compgen -v | grep MYSQLDTSD_ ) )
	#echo "var list $CREATEVAR" 
	CREATEARRAY=0
	while [ -n "${CREATEVAR[$CREATEARRAY]+set}" ]
	do
		CURRENTSEARCH=${CREATEVAR[$CREATEARRAY]}
		SEARCHFUNCTION=${CURRENTSEARCH#*_}
		MYSQLTABLENAME=${SEARCHFUNCTION%_*}
		MYSQLCOLUMNNAME=${SEARCHFUNCTION##*_}
		MYSQLDATATYPE=${!CURRENTSEARCH}
		#echo "Column name is $MYSQLCOLUMNNAME"
		#echo "Table name is $MYSQLTABLENAME"
		#echo "Search function is $SEARCHFUNCTION"
		#echo "Datatype is ${!CURRENTSEARCH}"
		lib_mysend "CREATE TABLE IF NOT EXISTS $MYSQLTABLENAME ( line INT NOT NULL AUTO_INCREMENT, PRIMARY KEY(line) );" 
		lib_mysend "ALTER TABLE $MYSQLTABLENAME ADD $MYSQLCOLUMNNAME $MYSQLDATATYPE;"
		let CREATEARRAY++
	done
# This was added to address the issue of having a unique index for Mysql.  This allows for columns like players' names
# to not contain the same values without any sort of complicated checking.	
	CREATEVAR=( $(compgen -v | grep MYSQLALTER_ ) )
	CREATEARRAY=0
	while [ -n "${CREATEVAR[$CREATEARRAY]+set}" ]
	do
		CURRENTSEARCH=${CREATEVAR[$CREATEARRAY]}
		SEARCHFUNCTION=${CURRENTSEARCH#*_}
		MYSQLTABLENAME=${SEARCHFUNCTION%_*}
		MYSQLCOLUMNNAME=${SEARCHFUNCTION##*_}
		MYSQLDATATYPE=${!CURRENTSEARCH}
		#echo "Column name is $MYSQLCOLUMNNAME"
		#echo "Table name is $MYSQLTABLENAME"
		#echo "Search function is $SEARCHFUNCTION"
		#echo "Datatype is ${!CURRENTSEARCH}"
		#echo "Send this ALTER TABLE $MYSQLTABLENAME ADD $MYSQLDATATYPE ($MYSQLCOLUMNNAME)"
		lib_mysend "ALTER TABLE $MYSQLTABLENAME ADD $MYSQLDATATYPE ($MYSQLCOLUMNNAME);"
		let CREATEARRAY++
	done
}
core_mycreate() {
    lib_mycreate
}
lib_myvalueretrieve() {
# Usage: lib_mysend [column to search] [table column is in] [value in column]
    MYVALUERETRIEVENAME="${@:3}"
	#echo "This is name $MYVALUERETRIEVENAME"
    mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -sNe "select $1 from $2 where NAME='$MYVALUERETRIEVENAME';"
}
lib_mycolumnretrieve() {
# Retrieves an entire column
# Usage:  lib_mycolumnretrieve [table] [row]
	mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -se "select $2 from $1;"
}
lib_columnretrievesearch() {
# Like myvalueretrieve only tries to grab all values from a column rather than just one from a column with a unique index
# Usage: columnretrievesearch column_to_display table column_containing_search search_string
    searchval="${@:4}"
    #echo "this is column to retrieve from $1 from this table $2 searching from this column $3 containing this string $searchval"
    mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -sNe "select $1 from $2 where $3 like '%$searchval%';"
}	
log_myerasetable() { 
    lib_mysend "TRUNCATE TABLE $1;"
}