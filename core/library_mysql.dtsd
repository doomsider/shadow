#!/bin/bash
# Shadow .01 Based off of DTSD
# This is the main set of functions for dealing with the Mysql database
lib_mysend() {
# Usage lib_mysend database user password command
	MYSQLCOMMAND="${@:1}"
	#echo "command to mysql $MYSQLCOMMAND"
	mysql --defaults-extra-file=$CONFIGDTSD_INSTALLPATH/core/shadow.cnf -e "$MYSQLCOMMAND"
}
lib_mytextdump() {
# Usage lib_mytextdump table
# Dumps a mysql table as a text file for easy searching.  all parameter will dump all the logs except for serverlog
	if [ ! -d "$CONFIGDTSD_INSTALLPATH/dump" ]
	then
	mkdir $CONFIGDTSD_INSTALLPATH/dump
	fi
	if [ "$1" = "all" ]
	then
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from ADMINLOG" >$CONFIGDTSD_INSTALLPATH/dump/ADMINLOG.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from PLAYERDB" >$CONFIGDTSD_INSTALLPATH/dump/PLAYERDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from ASTEROIDDB" >$CONFIGDTSD_INSTALLPATH/dump/ASTEROIDDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from BOUNTYDB" >$CONFIGDTSD_INSTALLPATH/dump/BOUNTYDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from BOUNTYLOG" >$CONFIGDTSD_INSTALLPATH/dump/BOUNTYLOG.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from CHATLOG" >$CONFIGDTSD_INSTALLPATH/dump/CHATLOG.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from DESTROYLOG" >$CONFIGDTSD_INSTALLPATH/dump/DESTROYLOG.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from DUEL" >$CONFIGDTSD_INSTALLPATH/dump/DUEL.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from DUELRESULTS" >$CONFIGDTSD_INSTALLPATH/dump/DUELRESULTS.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from GARAGEDB" >$CONFIGDTSD_INSTALLPATH/dump/GARAGEDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from GUESTBOOK" >$CONFIGDTSD_INSTALLPATH/dump/GUESTBOOK.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from IDDB" >$CONFIGDTSD_INSTALLPATH/dump/IDDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from JAIL" >$CONFIGDTSD_INSTALLPATH/dump/JAIL.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from KILLDB" >$CONFIGDTSD_INSTALLPATH/dump/KILLDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from OFFLIMIT" >$CONFIGDTSD_INSTALLPATH/dump/OFFLIMIT.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from RANKLOG" >$CONFIGDTSD_INSTALLPATH/dump/RANKLOG.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from SEARCHDB" >$CONFIGDTSD_INSTALLPATH/dump/SEARCHDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from SECTORDB" >$CONFIGDTSD_INSTALLPATH/dump/SECTORDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from SERVERSTATUS" >$CONFIGDTSD_INSTALLPATH/dump/SERVERSTATUS.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from SHIPDB" >$CONFIGDTSD_INSTALLPATH/dump/SHIPDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from SHOPDB" >$CONFIGDTSD_INSTALLPATH/dump/SHOPDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from STATIONDB" >$CONFIGDTSD_INSTALLPATH/dump/STATIONDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from TRIGGERDB" >$CONFIGDTSD_INSTALLPATH/dump/TRIGGERDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from VOTEDB" >$CONFIGDTSD_INSTALLPATH/dump/VOTEDB.txt
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from VOTELOG" >$CONFIGDTSD_INSTALLPATH/dump/VOTELOG.txt
	else
		mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from $1" >$CONFIGDTSD_INSTALLPATH/dump/$1.txt
	fi
}
core_mytextdump () {
lib_mytextdump $2
}
lib_myinsert() {
# This command creates a new row
# Usage lib_myinsert table column value 
	INSERTVALUE="${@:3}"
	#echo "INSERT INTO $1 ($2) VALUES ('$INSERTVALUE')"
	lib_mysend "INSERT INTO $1 ($2) VALUES (\"$INSERTVALUE\");"
}
lib_myupdate() {
# This command replaces a value in a column in a row containing a value
# Current limitation of this command is inserting a value with a space in it
# Usage lib_myupdate [table] [column_alter] [value to insert]  [row to search] [search value]  
# lib_myupdate PLAYERDB IP 192.168.1 NAME Doomsider
    UPDATESEARCHVALUE="${@:5}"
	#echo "INSERT INTO $1 ($2) VALUES ('$INSERTVALUE')"
	lib_mysend "UPDATE $1 SET $2='$3' WHERE $4='$UPDATESEARCHVALUE'"
}
lib_mycreate() {
# This command generates a list of tables and columns described by all related scripts and then
# creates them if they do not eixst
	#echo "Generating database tables and columns"
	#echo "These vars detected"
	CREATEVAR=( $(compgen -v | grep MYSQLDTSD_ ) )
	#echo "var list $CREATEVAR" 
	CREATEARRAY=0
	while [ -n "${CREATEVAR[$CREATEARRAY]+set}" ]
	do
		CURRENTSEARCH=${CREATEVAR[$CREATEARRAY]}
		SEARCHFUNCTION=${CURRENTSEARCH#*_}
		MYSQLTABLENAME=${SEARCHFUNCTION%_*}
		MYSQLCOLUMNNAME=${SEARCHFUNCTION##*_}
		MYSQLDATATYPE=${!CURRENTSEARCH}
		#echo "Column name is $MYSQLCOLUMNNAME"
		#echo "Table name is $MYSQLTABLENAME"
		#echo "Search function is $SEARCHFUNCTION"
		#echo "Datatype is ${!CURRENTSEARCH}"
		lib_mysend "CREATE TABLE IF NOT EXISTS $MYSQLTABLENAME ( line INT NOT NULL AUTO_INCREMENT, PRIMARY KEY(line) );" 
# This needs to be re-written to look to see if table exists and if it does are the properties the same if not then create the column		
		lib_mysend "ALTER TABLE $MYSQLTABLENAME ADD $MYSQLCOLUMNNAME $MYSQLDATATYPE;"
		let CREATEARRAY++
	done
# This was added to address the issue of having a unique index for Mysql.  This allows for columns like players' names
# to not contain the same values without any sort of complicated checking.	
	CREATEVAR=( $(compgen -v | grep MYSQLALTER_ ) )
	CREATEARRAY=0
	while [ -n "${CREATEVAR[$CREATEARRAY]+set}" ]
	do
		CURRENTSEARCH=${CREATEVAR[$CREATEARRAY]}
		SEARCHFUNCTION=${CURRENTSEARCH#*_}
		MYSQLTABLENAME=${SEARCHFUNCTION%_*}
		MYSQLCOLUMNNAME=${SEARCHFUNCTION##*_}
		MYSQLDATATYPE=${!CURRENTSEARCH}
		#echo "Column name is $MYSQLCOLUMNNAME"
		#echo "Table name is $MYSQLTABLENAME"
		#echo "Search function is $SEARCHFUNCTION"
		#echo "Datatype is ${!CURRENTSEARCH}"
		#echo "Send this ALTER TABLE $MYSQLTABLENAME ADD $MYSQLDATATYPE ($MYSQLCOLUMNNAME)"
		lib_mysend "ALTER TABLE $MYSQLTABLENAME ADD $MYSQLDATATYPE ($MYSQLCOLUMNNAME);"
		let CREATEARRAY++
	done
}
core_mycreate() {
    lib_mycreate
}
lib_myvalueretrieve() {
# Usage: lib_mysend [column to search] [table column is in] [value in column]
    MYVALUERETRIEVENAME="${@:3}"
	#echo "This is name $MYVALUERETRIEVENAME"
    mysql --defaults-extra-file=$CONFIGDTSD_INSTALLPATH/core/shadow.cnf -sNe "select $1 from $2 where NAME='$MYVALUERETRIEVENAME';"
}
lib_mycolumnretrieve() {
# Retrieves an entire column
# Usage:  lib_mycolumnretrieve [table] [row]
	mysql --defaults-extra-file=$CONFIGDTSD_INSTALLPATH/core/shadow.cnf -se "select $2 from $1;"
}
lib_columnretrievesearch() {
# Like myvalueretrieve only tries to grab all values from a column rather than just one from a column with a unique index
# Usage: columnretrievesearch column_to_display table column_containing_search search_string
    searchval="${@:4}"
    #echo "this is column to retrieve from $1 from this table $2 searching from this column $3 containing this string $searchval"
    mysql --defaults-extra-file=$CONFIGDTSD_INSTALLPATH/core/shadow.cnf -sNe "select $1 from $2 where $3 like '%$searchval%';"
}	
log_myerasetable() { 
    lib_mysend "TRUNCATE TABLE $1;"
}
core_myserverstart() {
mysql --defaults-extra-file=$CONFIGDTSD_INSTALLPATH/core/shadow.cnf -e "INSERT INTO SERVERSTATUS (STATUS) VALUES (\"Starting\");"
}
# Example to dump a table as a text file
#  mysql --defaults-extra-file=/home/ubuntu/core/shadow.cnf -t -e "select * from PLAYERDB" >textfile.txt