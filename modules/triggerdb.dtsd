#!/bin/bash
# Shadow .01 Based off of DTSD
# Triggerdb handles functions that need to wait for additional information from the server to execute


MYSQLDTSD_TRIGGERDB_VALUE1="VARCHAR(50)"
MYSQLDTSD_TRIGGERDB_VALUE2="VARCHAR(50)"
MYSQLDTSD_TRIGGERDB_VALUE3="VARCHAR(50)"

lib_trigger() {
#lib_trigger command value name
#	TRIGGERVAR=( $(compgen -v | grep TRIGGER_ ) )
	VALUE1=$1
	VALUE2=$2
	VALUE3="${@:3}"
	COMMAND=TRIGGER_$VALUE1
	echo "This was sent to trigger function for value1  $VALUE1 and value2 $VALUE2 and value3 $VALUE3"
    mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "INSERT INTO TRIGGERDB (VALUE1, VALUE2, VALUE3) VALUES (\"$VALUE1\",\"$VALUE2\",\"$VALUE3\");"
#	lib_myinsert TRIGGERDB VALUE2 $2
#	lib_myupdate TRIGGERDB VALUE1 $COMMAND NAME $2
#	lib_myupdate TRIGGERDB VALUE3 $3 NAME $2
	eval $COMMAND $VALUE2 $VALUE3
#	TRIGARRAY=0
#	while [ -n "${TRIGGERVAR[$TRIGARRAY]+set}" ]
#	do
#		if [ "${TRIGGERVAR[$TRIGARRAY]}" = "$COMMAND" ]
#		then
#			echo "Command found"				
#			echo "Here is adjusted command for trigger $COMMAND $@"
#			eval $COMMAND $@
#			let TRIGARRAY++
#		else
#			let TRIGARRAY++
#		fi
#	done
}
lib_release() {
#lib_release <command> <value to search for>""
	echo "lib_released initiated"
	LIBRELEASESTRING="${@:1}"
	echo "This sent to lib_release $LIBRELEASESTRING"
	VALUERELEASE="${@:2}"
	COMMAND=$1
	echo "Current command is $COMMAND and value is $VALUERELEASE"
	CHECKENTRYEXISTS=$(mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -sNe "select VALUE3 from TRIGGERDB where VALUE1='$1' and VALUE2='$VALUERELEASE' or VALUE3='$VALUERELEASE' ORDER BY line ASC LIMIT 1;")
	echo "This is the value of the checkentryexists string $CHECKENTRYEXISTS"
	if [[ -z "$CHECKENTRYEXISTS" ]]
	then
		echo "No match for release $1"
	else
		CHECKVALUE1=$(mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -sNe "select VALUE2 from TRIGGERDB where VALUE1='$1' ORDER BY line ASC LIMIT 1;")
		CHECKVALUE2=$(mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -sNe "select VALUE3 from TRIGGERDB where VALUE1='$1' ORDER BY line ASC LIMIT 1;")
		COMMAND=RELEASE_$1
		echo "send this command for lib_release $COMMAND $CHECKVALUE1 $CHECKVALUE2"
		eval $COMMAND $CHECKVALUE1 $CHECKVALUE2
	#  DELETE FROM TRIGGERDB where VALUE1='VALUE1' ORDER BY line ASC LIMIT 1
	fi
#lib_release value
#RELEASEVAR=( $(compgen -v | grep RELEASE_ ) )
#
#	VALUE2=$2
#	VALUE3="${@:3}"
#	COMMAND=RELEASE_$VALUE1
#	echo "This was sent to trigger function for value1  $VALUE1 and value2 $VALUE2 and value3 $VALUE3"
#	RELEASEARRAY=0
#	while [ -n "${RELEASEVAR[$RELEASEARRAY]+set}" ]
#	do
#		if [ "${RELEASEVAR[$RELEASEARRAY]}" = "$COMMAND" ]
#			echo "Command found"				
#			echo "Here is adjusted command for release $COMMAND $@"
#			eval $COMMAND $@
#			let RELEASEARRAY++
#		else
#			let RELEASEARRAY++
#		fi
#	done
}
TRIGGER_startership() {
	echo "Startership triggered" 
	lib_trigger playerinfo $1 Astronaut
}
RELEASE_startership() {
	BLUEPRINT="${@:2}"
	echo "startership command released and blueprint to spawn is $BLUEPRINT"
	SECTORLOCATION=$(lib_myvalueretrieve CURRENTSECTOR PLAYERDB $1)
	PLAYERPOS=$(lib_myvalueretrieve LASTPOSITION PLAYERDB $1)
	PLAYERFAC=$(lib_myvalueretrieve FACTION PLAYERDB $1)
	if [[ $PLAYERFAC == null ]]
	then
		PLAYERFAC=0
	fi
	CUTSTRING=${SECTORLOCATION//_/ }
	ARRAYSTRING=($CUTSTRING)
	COLLECTSECTORX=${ARRAYSTRING[0]}
	COLLECTSECTORY=${ARRAYSTRING[1]}
	COLLECTSECTORZ=${ARRAYSTRING[2]}
	CUTSTRING=${PLAYERPOS//_/ }
	ARRAYSTRING=($CUTSTRING)
	COLLECTPOSX=${ARRAYSTRING[0]}
	COLLECTPOSY=${ARRAYSTRING[1]}
	COLLECTPOSZ=${ARRAYSTRING[2]}	
	echo "startership $VALUE to be spawned in $SECTORLOCATION in pos $PLAYERPOS with faction tag $PLAYERFAC as the name $RANDOM'_startship'"
	lib_screensend $CONFIGDTSD_MAINSCREEN /spawn_entity_pos \"$BLUEPRINT\" $RANDOM'_startership' $COLLECTSECTORX $COLLECTSECTORY $COLLECTSECTORZ $COLLECTPOSX $COLLECTPOSY $COLLECTPOSZ $PLAYERFAC false
	mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where VALUE2='$1' and VALUE1='startership';"

}

TRIGGER_playerinfo() {
	echo "player info triggered"
	lib_screensend $CONFIGDTSD_MAINSCREEN /player_info $1
}
RELEASE_playerinfo() {
	echo "player info released"
	mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where VALUE2='$1' and VALUE1='playerinfo' ORDER BY line ASC LIMIT 1;"
}
TRIGGER_shipinfo() {
	echo "ship info triggered"
	lib_screensend $CONFIGDTSD_MAINSCREEN /ship_info_name \"$BOARDSHIPNAME\"
}
RELEASE_shipinfo() {
	echo "ship info released"
	SHIPNAME="${@:2}"
	mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where VALUE3='$SHIPNAME' and VALUE1='shipinfo' ORDER BY line ASC LIMIT 1;"
}
TRIGGER_sectorinfo() {
	echo "sector info triggered"
	SECTORRELEASESTRING="${@:1}"
	echo "This sent to trigger_sectorinfo $SECTORRELEASESTRING"
	VALUERELEASE="${@:2}"
	SECTORNAME=$1
	CUTSTRING=${SECTORNAME//_/ }
	COLLECTSECTORARRAY=($CUTSTRING)
	COLLECTX=${COLLECTSECTORARRAY[0]}
	COLLECTY=${COLLECTSECTORARRAY[1]}
	COLLECTZ=${COLLECTSECTORARRAY[2]}
	lib_screensend $CONFIGDTSD_MAINSCREEN /sector_info $COLLECTX $COLLECTY $COLLECTZ
}
RELEASE_sectorinfo() {
	echo "sectorinfo command released"
	mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where VALUE2='$1' and VALUE1='sectorinfo' ORDER BY line ASC LIMIT 1;"
	
}
TRIGGER_playerdeposit() {
	echo "deposit command triggered"
	lib_trigger playerinfo $1 Astronaut
}
RELEASE_playerdeposit() {
	echo "deposit command released"
	echo "match found for banking command"
	BALANCECREDITS=$(lib_myvalueretrieve BANKCREDITS PLAYERDB $1)
	BVALUE=$(mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -sNe "select VALUE3 from TRIGGERDB where VALUE2='$1' and VALUE1='playerdeposit' ORDER BY line ASC LIMIT 1;")
	echo "Credits to be deposited $BVALUE"
	CREDITSTOTAL=$(lib_myvalueretrieve CREDITS PLAYERDB $1)
	REMAININGCREDITS=$(( $CONFIGDTSD_CREDITLIMIT - $BALANCECREDITS ))
	echo "Credits in log $CREDITSTOTAL"
	echo "Total credits are $CREDITSTOTAL on person and $BALANCECREDITS in bank"
	if [ "$CREDITSTOTAL" -ge "$BVALUE" ]
	then
		echo "enough money detected"
		NEWBALANCE=$(( $BVALUE + $BALANCECREDITS ))
		NEWCREDITS=$(( $CREDITSTOTAL - $BVALUE ))
#		echo "new bank balance is $NEWBALANCE"
		lib_screensend $CONFIGDTSD_MAINSCREEN /give_credits $1 -$BVALUE
		lib_myupdate PLAYERDB BANKCREDITS "$NEWBALANCE" NAME $1
#		lib_myupdate PLAYERDB BANKCOMMAND "none" NAME $1
		lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 GALATIC BANK - You successfully deposited $BVALUE credits
		lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 GALATIC BANK - Your balance is now $NEWBALANCE
		mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where VALUE2='$1' and VALUE1='playerdeposit' ORDER BY line ASC LIMIT 1;"
		DELETE FROM TRIGGERDB where VALUE1='VALUE1' ORDER BY line ASC LIMIT 1
		#		as_user "echo '$1 deposited $2' >> $BANKLOG"
	else
		lib_screensend $CONFIGDTSD_MAINSCREEN /pm $2 GALATIC BANK - Insufficient money
		mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where VALUE2='$1' and VALUE1='playerdeposit' ORDER BY line ASC LIMIT 1;"
#		lib_myupdate PLAYERDB BANKCOMMAND "none" NAME $1
		echo "not enough money"
	fi
}
trigger_command() {
# Starts player or ship info and stores a command to be triggered later with check when the value wanted is received
# USAGE: trigger_command <player, ship or check> <name> <command> <value>
# EXAMPLE 1: trigger_command player doomsider deposit 2000
# EXAMPLE 2: trigger_command check doomsider
	TRIGGERCOMMANDSTRING="${@:1}"
	echo "This was sent to trigger command $TRIGGERCOMMANDSTRING"
	SWITCH=$1
	NAME=$2
	COMMAND=$3
	VALUE="${@:4}"
	echo "Value is $VALUE"
	case "$SWITCH" in
	*"ship"*) 
		echo "switch for ship detected"
	;;
	*"player"*) 
		echo "switch for player detected"
		case "$COMMAND" in
			*"deposit"*)
			echo "deposit command triggered"
			lib_myinsert TRIGGERDB NAME $2
			lib_myupdate TRIGGERDB COMMAND $3 NAME $2
			lib_myupdate TRIGGERDB VALUE $4 NAME $2
#			lib_myupdate PLAYERDB BANKCOMMAND "$COMMANDBANK" NAME $1
			lib_myinsert REQUESTINFODB NAME $2
			lib_myupdate REQUESTINFODB TYPE Astronaut NAME $2
			lib_screensend $CONFIGDTSD_MAINSCREEN /player_info $2
		;;
			*"startership"*)
			echo "startership command triggered"
			lib_myinsert TRIGGERDB NAME $2
			lib_myupdate TRIGGERDB COMMAND $3 NAME $2
			lib_myupdate TRIGGERDB VALUE $4 NAME $2
			lib_myinsert REQUESTINFODB NAME $2
			lib_myupdate REQUESTINFODB TYPE Astronaut NAME $2
			lib_screensend $CONFIGDTSD_MAINSCREEN /player_info $2
		;;
		esac
	;;
	*"check"*) 
		echo "switch for check detected"
		CHECKCOMMAND=$(lib_myvalueretrieve COMMAND TRIGGERDB $2)
		case "$CHECKCOMMAND" in
			*"deposit"*)
				echo "deposit command released"
				echo "match found for banking command"
				BALANCECREDITS=$(lib_myvalueretrieve BANKCREDITS PLAYERDB $2)
				BVALUE=$(lib_myvalueretrieve VALUE TRIGGERDB $2)
BVALUE=$(mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -sNe "select VALUE3 from TRIGGERDB where VALUE1='playerdeposit' ORDER BY line ASC LIMIT 1;")
#	 			echo $BALANCECREDITS
				CREDITSTOTAL=$(lib_myvalueretrieve CREDITS PLAYERDB $2)
				REMAININGCREDITS=$(( $CONFIGDTSD_CREDITLIMIT - $BALANCECREDITS ))
				echo "Credits in log $CREDITSTOTAL"
				echo "Total credits are $CREDITSTOTAL on person and $BALANCECREDITS in bank"
				echo "Credits to be deposited $BVALUE"
				if [ "$CREDITSTOTAL" -ge "$BVALUE" ]
				then
					echo "enough money detected"
					NEWBALANCE=$(( $BVALUE + $BALANCECREDITS ))
					NEWCREDITS=$(( $CREDITSTOTAL - $BVALUE ))
#					echo "new bank balance is $NEWBALANCE"
					lib_screensend $CONFIGDTSD_MAINSCREEN /give_credits $2 -$BVALUE
					lib_myupdate PLAYERDB BANKCREDITS "$NEWBALANCE" NAME $2
#					lib_myupdate PLAYERDB BANKCOMMAND "none" NAME $1
					lib_screensend $CONFIGDTSD_MAINSCREEN /pm $2 GALATIC BANK - You successfully deposited $BVALUE credits
					lib_screensend $CONFIGDTSD_MAINSCREEN /pm $2 GALATIC BANK - Your balance is now $NEWBALANCE
					mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where NAME like '$2';"
			#		as_user "echo '$1 deposited $2' >> $BANKLOG"
				else
					lib_screensend $CONFIGDTSD_MAINSCREEN /pm $2 GALATIC BANK - Insufficient money
					mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where NAME like '$2';"
#					lib_myupdate PLAYERDB BANKCOMMAND "none" NAME $1
					echo "not enough money"
				fi
			;;
			*"startership"*)
				echo "startership command released"
				SECTORLOCATION=$(lib_myvalueretrieve CURRENTSECTOR PLAYERDB $2)
				PLAYERPOS=$(lib_myvalueretrieve LASTPOSITION PLAYERDB $2)
				PLAYERFAC=$(lib_myvalueretrieve FACTION PLAYERDB $2)
				if [[ $PLAYERFAC == null ]]
				then
					PLAYERFAC=0
				fi
				CUTSTRING=${SECTORLOCATION//_/ }
				ARRAYSTRING=($CUTSTRING)
				COLLECTSECTORX=${ARRAYSTRING[0]}
				COLLECTSECTORY=${ARRAYSTRING[1]}
				COLLECTSECTORZ=${ARRAYSTRING[2]}
				CUTSTRING=${PLAYERPOS//_/ }
				ARRAYSTRING=($CUTSTRING)
				COLLECTPOSX=${ARRAYSTRING[0]}
				COLLECTPOSY=${ARRAYSTRING[1]}
				COLLECTPOSZ=${ARRAYSTRING[2]}	
				echo "startership $VALUE to be spawned in $SECTORLOCATION in pos $PLAYERPOS with faction tag $PLAYERFAC as the name $RANDOM'_startship'"
				lib_screensend $CONFIGDTSD_MAINSCREEN /spawn_entity_pos \"$VALUE\" $RANDOM'_startership' $COLLECTSECTORX $COLLECTSECTORY $COLLECTSECTORZ $COLLECTPOSX $COLLECTPOSY $COLLECTPOSZ $PLAYERFAC false
				mysql -D $CONFIGDTSD_MYSQLDB -u $CONFIGDTSD_MYSQLUSER -p$CONFIGDTSD_MYSQLPASS -e "DELETE FROM TRIGGERDB where NAME like '$2';"
			;;
		esac
	;;
	
	
	esac
	
	
}
