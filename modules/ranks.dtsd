#!/bin/bash
# Shadow .01 Based off of DTSD
# The rank system allows for a range of control over various chat commands
MYSQLDTSD_RANKLOG_COMMANDSALLOWED=TEXT
MYSQLDTSD_RANKLOG_NAME="VARCHAR(25)"
MYSQLALTER_RANKLOG_NAME="UNIQUE INDEX"

# Set the names for all the ranks


COMMANDS_RANK1=Ensign
COMMANDS_RANK2=Lieutenant
COMMANDS_RANK3=Commander
COMMANDS_RANK4=Captain
COMMANDS_RANK5=Admiral


check_player_rank_allowed() {


echo "Checking to see if player is allowed to execute chat command"
#echo "check_player_rank_allowed chatcommand playername"
PLAYERCHECK="${@:2}"
PLAYERRANK=$(lib_myvalueretrieve RANK PLAYERDB $PLAYERCHECK)
PCOMMANDALLOWED=$(lib_myvalueretrieve COMMANDSALLOWED RANKLOG $PLAYERRANK)

echo "Player $2 is attempting to execute $1 chatcommand"
echo "Player $2 rank is $PLAYERRANK"
echo "Player can execute these commands $PCOMMANDALLOWED"

if [[ $PCOMMANDALLOWED == *"$1"* ]]
then
echo "Player has authority to execute $1"
return 0
else
echo "Player does not have the rank to execute $1"
return 1
fi

#case "$PCOMMANDALLOWED" in 
#		*""*)   
#			echo "Player has authority to execute $1"
#	
#		;;
#		esac



}

core_checkrank() {
check_player_rank_allowed "${@:2}"

}


set_ranks_database() {
# Erase existing RANKLOG table
log_myerasetable RANKLOG

#Set strings for ranks and the commands they are allowed to use
COMMANDLIST_RANK1="CORE HELP"
COMMANDLIST_RANK2="CORE HELP"
COMMANDLIST_RANK3="CORE HELP"
COMMANDLIST_RANK4="CORE HELP"
COMMANDLIST_RANK5="BALANCE CORE DEPOSIT HELP KILL INVISION INVISIOFF PROTECT SPAWNSTART SPAWNSTOP UNPROTECT TELEPORT TRANSFER WITHDRAW"

RANKCOMMANDS=${!COMMANDLIST*}
RANKCOMMANDS=($RANKCOMMANDS)

RANKARRAY=0

while [ -n "${RANKCOMMANDS[$RANKARRAY]+set}" ]
	do
	CURRENTARRAY=${RANKCOMMANDS[$RANKARRAY]}
	echo "The current array $CURRENTARRAY"
#	echo ${!CURRENTARRAY}
	RANKNAME=${CURRENTARRAY/COMMANDLIST/COMMANDS}
	echo "Here is rank name ${!RANKNAME}"
	CURRENTVALUE=${!CURRENTARRAY}
	echo $CURRENTVALUE
#	var3=$CURRENTVALUE
	lib_myinsert RANKLOG NAME ${!RANKNAME}
	lib_myupdate RANKLOG COMMANDSALLOWED "$CURRENTVALUE" NAME ${!RANKNAME}
	let RANKARRAY++
	
done

}

core_setranks() {
set_ranks_database

}


# #Rank Commands
# chatcommand_RANKME(){
# #Tells you what your rank is and what commands are available to you
# #USAGE: !RANKME
	# if [ "$#" -ne "1" ]
	# then
		# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 Invalid parameters. Please use !RANKME
	# else
			# USERRANK=$(sed -n '3p' "$PLAYERFILE/$PLAYERCHATID" | cut -d" " -f2 | cut -d"[" -f2 | cut -d"]" -f1)
			# USERCOMMANDS=$(grep $USERRANK $RANKCOMMANDS | cut -d" " -f2-)
			# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 $1 rank is $USERRANK 
			# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 Commands available are $USERCOMMANDS 
	# fi
# }
# chatcommand_RANKLIST(){
# #Lists all the available ranks
# #USAGE: !RANKLIST
	# if [ "$#" -ne "1" ]
	# then
		# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 Invalid parameters. Please use !RANKLIST
	# else
	    # LISTRANKS=( $(cut -d " " -f 1 $RANKCOMMANDS) )
		# CHATLIST=${LISTRANKS[@]}	
		# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 The Ranks are: $CHATLIST 
	# fi
# }
# chatcommand_RANKSET(){
# #Sets the rank of the player
# #USAGE: !RANKSET <Player> <Rank>
	# if [ "$#" -ne "3" ]
	# then
		# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 Invalid parameters. Please use !RANKSET <Name> <Rank>
	# else
		# if ! grep -q $3 $RANKCOMMANDS
		# then
			# if [ -e $PLAYERFILE/$2 ]
			# then
				# as_user "sed -i '3s/.*/Rank: \[$3\]/g' $PLAYERFILE/$2"
			# else
				# MakePlayerFile $2
				# as_user "sed -i '3s/.*/Rank: \[$3\]/g' $PLAYERFILE/$2"
			# fi
			# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 $2 is now the rank $3
		# else
			# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 That rank does not exist
		# fi
	# fi
# }
# chatcommand_RANKUSER(){
# #Finds out the rank of the given player
# #USAGE: !RANKUSER <Player>
	# if [ "$#" -ne "2" ]
	# then
		# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 Invalid parameters. Please use !RANKUSER <Name>
	# else
		# if [ -e $PLAYERFILE/$2 ]
		# then
			# RANKUSERSTING=$(sed -n '3p' $PLAYERFILE/$2 | cut -d" " -f2)
			# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 $RANKUSERSTING
		# else
			# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 $2 has no current Rank or does not exist
		# fi
	# fi
# }
# chatcommand_RANKCOMMAND(){
# #Lists all commands available to you
# #USAGE: !RANKCOMMAND
	# if [ "$#" -ne "1" ]
	# then
		# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 Invalid parameters. Please use !RANKCOMMAND
	# else		
		# RANKUCOMMAND=$(grep $PLAYERRANK $RANKCOMMANDS | cut -d" " -f2-)
		# lib_screensend $CONFIGDTSD_MAINSCREEN /pm $1 Commands are $RANKUCOMMAND
	# fi
# }