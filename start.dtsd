#!/bin/bash
# In start, create a screen for the server and then a screen for any DTSD functions, check to see if screens are already running and have option to terminate
# Test file
core_start() {
	echo "starting server"
	if lib_check_server_running
	#	if ps aux | grep $CONFIGDTSD_SERVICE | grep -v grep | grep -v tee | grep port:$CONFIGDTSD_PORT  >/dev/null
	then
		echo "Tried to start but $CONFIGDTSD_SERVICE was already running!"
	else
		echo "$CONFIGDTSD_SERVICE was not running... starting."
# Lib_screen add will detect if screens already running and will terminate them if so.
	lib_screenadd $CONFIGDTSD_MAINSCREEN
	lib_screenadd $CONFIGDTSD_DTSDSCREEN
# For java to launch Starmade it must be launched in the correct directory
	lib_screensend $CONFIGDTSD_MAINSCREEN cd $CONFIGDTSD_INSTALLPATH/StarMade
# Start script which will create a shell that is logged for all output.  This is useful to see the commands that are given.
# -f is used to flush data as it is given and keeps the log file updated quickly
	lib_screensend $CONFIGDTSD_MAINSCREEN script -f $CONFIGDTSD_INSTALLPATH/CONFIGDTSD_MAINSCREEN.log
	lib_screensend $CONFIGDTSD_DTSDSCREEN script -f $CONFIGDTSD_INSTALLPATH/CONFIGDTSD_SCRIPTSCREEN.log
	lib_screensend $CONFIGDTSD_MAINSCREEN java -Xmx$CONFIGDTSD_MAXMEM -Xms$CONFIGDTSD_MINMEM -jar $CONFIGDTSD_SERVICE -server -port:$CONFIGDTSD_PORT
# lib_screensend $CONFIGDTSD_MAINSCREEN java -Xmx$CONFIGDTSD_MAXMEM -Xms$CONFIGDTSD_MINMEM -jar "$CONFIGDTSD_INSTALLPATH"StarMade/$CONFIGDTSD_SERVICE -server -port:$CONFIGDTSD_PORT
# This is where the run functions will be gathered and ran
	lib_screensend $CONFIGDTSD_DTSDSCREEN $CONFIGDTSD_SCRIPTPATH runlog
#	RUNFUNCTIONS=( $(compgen -A function | grep run_) )
#	run_logcollect
	fi  
}

